// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: contract.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Contract {

  /// <summary>Holder for reflection information generated from contract.proto</summary>
  public static partial class ContractReflection {

    #region Descriptor
    /// <summary>File descriptor for contract.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ContractReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5jb250cmFjdC5wcm90bxIIY29udHJhY3QiPwoJUmVxdWVzdFYxEgwKBFRl",
            "eHQYASABKAkSEAoIRGF0YWJhc2UYAiABKAkSEgoKUHJvcGVydGllcxgDIAEo",
            "CSIiCgdSZXBseVYxEhcKD0t1c3RvRGF0YVN0cmVhbRgBIAEoCTJYChZJbnRl",
            "ck5vZGVDb21tdW5pY2F0aW9uEj4KEEV4ZWN1dGVSZXF1ZXN0VjESEy5jb250",
            "cmFjdC5SZXF1ZXN0VjEaES5jb250cmFjdC5SZXBseVYxIgAwAWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Contract.RequestV1), global::Contract.RequestV1.Parser, new[]{ "Text", "Database", "Properties" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Contract.ReplyV1), global::Contract.ReplyV1.Parser, new[]{ "KustoDataStream" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class RequestV1 : pb::IMessage<RequestV1> {
    private static readonly pb::MessageParser<RequestV1> _parser = new pb::MessageParser<RequestV1>(() => new RequestV1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestV1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Contract.ContractReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestV1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestV1(RequestV1 other) : this() {
      text_ = other.text_;
      database_ = other.database_;
      properties_ = other.properties_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestV1 Clone() {
      return new RequestV1(this);
    }

    /// <summary>Field number for the "Text" field.</summary>
    public const int TextFieldNumber = 1;
    private string text_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Database" field.</summary>
    public const int DatabaseFieldNumber = 2;
    private string database_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Database {
      get { return database_; }
      set {
        database_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Properties" field.</summary>
    public const int PropertiesFieldNumber = 3;
    private string properties_ = "";
    /// <summary>
    /// TODO: This is actually a JSON string. May want a better way to serialize/deserialize it
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Properties {
      get { return properties_; }
      set {
        properties_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestV1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestV1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Text != other.Text) return false;
      if (Database != other.Database) return false;
      if (Properties != other.Properties) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (Database.Length != 0) hash ^= Database.GetHashCode();
      if (Properties.Length != 0) hash ^= Properties.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Text.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Text);
      }
      if (Database.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Database);
      }
      if (Properties.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Properties);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (Database.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Database);
      }
      if (Properties.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Properties);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestV1 other) {
      if (other == null) {
        return;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      if (other.Database.Length != 0) {
        Database = other.Database;
      }
      if (other.Properties.Length != 0) {
        Properties = other.Properties;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Text = input.ReadString();
            break;
          }
          case 18: {
            Database = input.ReadString();
            break;
          }
          case 26: {
            Properties = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReplyV1 : pb::IMessage<ReplyV1> {
    private static readonly pb::MessageParser<ReplyV1> _parser = new pb::MessageParser<ReplyV1>(() => new ReplyV1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReplyV1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Contract.ContractReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReplyV1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReplyV1(ReplyV1 other) : this() {
      kustoDataStream_ = other.kustoDataStream_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReplyV1 Clone() {
      return new ReplyV1(this);
    }

    /// <summary>Field number for the "KustoDataStream" field.</summary>
    public const int KustoDataStreamFieldNumber = 1;
    private string kustoDataStream_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string KustoDataStream {
      get { return kustoDataStream_; }
      set {
        kustoDataStream_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReplyV1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReplyV1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (KustoDataStream != other.KustoDataStream) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (KustoDataStream.Length != 0) hash ^= KustoDataStream.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (KustoDataStream.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(KustoDataStream);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (KustoDataStream.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(KustoDataStream);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReplyV1 other) {
      if (other == null) {
        return;
      }
      if (other.KustoDataStream.Length != 0) {
        KustoDataStream = other.KustoDataStream;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            KustoDataStream = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
